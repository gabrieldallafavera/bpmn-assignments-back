// <auto-generated />
using System;
using Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Database.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220624144912_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Api.Database.Entities.People.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("RefreshToken", "People");
                });

            modelBuilder.Entity("Api.Database.Entities.People.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("Deleted")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("User", "People");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2022, 6, 24, 11, 49, 11, 977, DateTimeKind.Local).AddTicks(5391),
                            Email = "myadminuser@email.com",
                            Name = "My Admin User",
                            PasswordHash = new byte[] { 107, 183, 179, 146, 65, 157, 246, 196, 32, 57, 215, 212, 223, 249, 49, 71, 59, 245, 82, 166, 121, 139, 155, 165, 155, 98, 187, 94, 26, 156, 158, 192, 18, 134, 201, 75, 160, 101, 215, 170, 0, 254, 139, 21, 249, 240, 67, 143, 253, 209, 15, 95, 169, 46, 139, 12, 133, 170, 226, 180, 175, 200, 41, 18 },
                            PasswordSalt = new byte[] { 135, 86, 250, 178, 189, 86, 174, 214, 114, 109, 170, 220, 215, 242, 90, 32, 222, 60, 75, 145, 164, 68, 133, 8, 127, 8, 9, 164, 160, 242, 217, 71, 186, 8, 134, 96, 43, 61, 125, 243, 201, 49, 83, 33, 89, 116, 45, 192, 207, 146, 9, 159, 246, 35, 116, 90, 211, 58, 101, 238, 204, 152, 46, 125, 202, 61, 159, 140, 202, 131, 28, 227, 137, 254, 57, 113, 42, 128, 232, 176, 181, 147, 227, 78, 99, 227, 199, 63, 21, 142, 41, 13, 127, 211, 219, 76, 135, 163, 148, 212, 201, 196, 140, 140, 236, 46, 73, 193, 113, 63, 169, 237, 77, 88, 114, 144, 138, 135, 140, 231, 160, 200, 43, 224, 246, 194, 226, 163 },
                            Role = "Admin",
                            Username = "MyAdminUser"
                        });
                });

            modelBuilder.Entity("Api.Database.Entities.People.RefreshToken", b =>
                {
                    b.HasOne("Api.Database.Entities.People.User", "User")
                        .WithOne("RefreshToken")
                        .HasForeignKey("Api.Database.Entities.People.RefreshToken", "UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Api.Database.Entities.People.User", b =>
                {
                    b.Navigation("RefreshToken");
                });
#pragma warning restore 612, 618
        }
    }
}
